#-------------------------------------------------------------
echo "Start execute Time:"

sh date

set search_path ".	$env(ILANE_LIB_PATH)	${search_path}"
set share_wrapper_en    $env(share_wrapper_en)
set Comp                $env(Compr)

if {$share_wrapper_en == "yes" }  {
set_app_options -as_user_default -list {dft.test_dedicated_clock_chain_clock false}
} else {
set_app_options -as_user_default -list {dft.test_dedicated_clock_chain_clock true}
}

set_app_options -as_user_default -list {dft.xlbist_test_mode_from_1500 true}
set_app_options -as_user_default -name dft.test_icg_p_ref_for_dft -value "CGLPPSX16_RVT"
set_app_options -as_user_default -name hdlin.analyze_searching_verbose_mode -value true
set_app_options -as_user_default -list {dft.test_core_wrap_report_file compile_wrp_report}
set sh_continue_on_error true	;# if the NDM libraries of the memories are not defined it
				                ;# will produce link errors that could be ignored

set libs_path [getenv ILANE_LIB_PATH]

create_lib -ref_libs [list  $libs_path/NDM/sadsls0c4l2p2048x32m8b1w0c0p0d0r1s2z1rw00_lib.ndm \
		                    $libs_path/NDM/saed32rvt_c.ndm] memory_stdlib_io.nlib	;# Memory library link should be parametrized to easy library management

analyze -format sverilog -vcs "-f ../../01_testmax/WORK/output/Verilog/sources.f"	;# The source.f is automatically generated by the previous step

set design or1200_dc_top

elaborate $design

set_top_module $design		;# top level design name required to be specified

current_design $design

setup_rtl_flow

set normal_channel_count	7
set core_chain_count		80
set wrp_channel_count		2
set occ_chain_count 		1
set pipeline_stage 		2
set occ_chain_len 		4
if { $share_wrapper_en == "yes"  } {
 set wrapper_reuse_threshold 3
} else {
 set wrapper_reuse_threshold -1
}

set misr 32
set pcw 16
set scw 16

if {$Comp == "streaming"} {
set stream true;
} else {
set stream false;
}

set ext_sc 4

set_dft_configuration -scan 		         enable
set_dft_configuration -scan_compression      enable
set_dft_configuration -wrapper 		         enable
set_dft_configuration -pipeline_scan_data    enable
set_dft_configuration -clock_controller      enable
set_dft_configuration -logicbist 	         enable
set_dft_configuration -ieee_1500 	         enable

set_dft_signal       -view spec -type TestMode -port                       [list TM1 TM2 TM3]
define_test_mode 	 xlbist 	 -usage logicbist   
define_test_mode 	 sccomp 	 -usage ${Comp}_compression 	 -encoding [list TM1 0  TM2 0  TM3 1 ] 
define_test_mode 	 wrp_if 	 -usage wrp_if                   -encoding [list TM1 0  TM2 1  TM3 1 ] 
define_test_mode 	 scan 	 	 -usage scan                     -encoding [list TM1 0  TM2 1  TM3 0 ] 
define_test_mode 	 wrp_of 	 -usage wrp_of                   -encoding [list TM1 1  TM2 1  TM3 1 ] 

define_test_mode 	 my_wrp_of 	 -usage {wrp_of scan_compression} -encoding [list TM1 1  TM2 0  TM3 1 ] 

reset_test_mode


 set_dft_drc_configuration -internal_pins enable		;#enabling internal pin is required


set_dft_signal -type AteClock  	 -port ate_clk 		 	 -view existing -timing [list 45 55] -test_mode all_dft

set_dft_signal -type RefClock    -port REFCLK            -view existing -timing [list  5 10] -period 10 -test_mode all_dft 

set_dft_signal -type PLLClock	 -port vl_sms_WRCK 		 -view existing -timing [list 45 55] -test_mode all_dft -usage occ 
set_dft_signal -type PLLClock 	 -port clk       		 -view existing -timing [list 45 55] -test_mode all_dft -usage occ 
set_dft_signal -type ScanClock	 -port pipe_clk	 	 	 -view existing -timing [list 45 55] -test_mode all_dft  

set_dft_signal -type PLLClock    -hookup_pin u_pll_gen/pll_clk_2 -view spec     -timing [list 45 55] -test_mode all_dft -usage occ 

set_dft_signal -type wrp_clock   -port vl_sms_WRCK



set_dft_signal -type reset      -port rst    	    -view existing   -active_state 1 
set_dft_signal -type reset      -port vl_sms_WRSTN 	-view existing   -active_state 0 

set_dft_signal -type Constant   -port RST           -view existing -active_state 0

set_dft_signal -type TestMode  -port core_occ_test_mode_local -view spec  -active_state 1 -test_mode all_dft -usage occ
set_dft_signal -type TestMode  -port core_occ_test_mode_upper -view spec  -active_state 1 -test_mode all_dft -usage occ

set_dft_signal -type ScanEnable -port scan_enable    -view spec  -active_state 1 -test_mode all_dft 		;#defining the port to be used as Scan Enable 

set_dft_signal -type pll_bypass 	    -port pll_bypass  -view spec  -active_state 1 -test_mode all_dft 
set_dft_signal -type occ_reset  	    -port occ_reset   -view spec  -active_state 1 -test_mode all_dft 
set_dft_signal -type TestControl 	    -port SPC_DISABLE -view spec  -active_state 1 -test_mode all_dft 
set_dft_signal -type wrp_shift 		    -port wrp_shift   -view spec  -active_state 1 -test_mode wrp_of 
set_dft_signal -type IsolationControl 	    -port test_mode   -view spec  -active_state 1 -test_mode all_dft 	;# prepare port to control Test Points Enable (it will be addded in DC/FC)
set_dft_signal -type Constant 		    -port test_mode   -view spec  -active_state 1 -test_mode all_dft 	;# required to be constrained to propagate the clock to memories
set_dft_signal -type Constant 		    -port vl_sms_dm0  -view spec  -active_state 1 -test_mode all_dft 
set_dft_signal -type Constant 		    -port vl_sms_dm1  -view spec  -active_state 1 -test_mode all_dft 
set_dft_signal -type Constant 		    -port vl_sms_dm2  -view spec  -active_state 1 -test_mode all_dft 

set_dft_signal -type WSI        -port WSI 	    -view spec   
set_dft_signal -type WSO        -port WSO 	    -view spec   
set_dft_signal -type WRCK       -port WRCK 	    -view spec   
set_dft_signal -type WRSTN      -port WRSTN 	-view spec   
set_dft_signal -type CaptureWR 	-port CAPTUREWR -view spec   
set_dft_signal -type ShiftWR 	-port SHIFTWR 	-view spec   
set_dft_signal -type UpdateWR 	-port UPDATEWR 	-view spec   
set_dft_signal -type SelectWIR 	-port SELECTWIR -view spec  

 
 set_ieee_1500_configuration -wir_width 4

set_pipeline_scan_data_configuration    -head_pipeline_stages ${pipeline_stage} \
			                            -head_pipeline_clock pipe_clk \
			                            -tail_pipeline_stage ${pipeline_stage} \
			                            -tail_pipeline_clock pipe_clk \
			                            -head_scan_flop true \
			                            -tail_scan_flop true


set_dft_asynchronous_controller         -async [list rst vl_sms_WRSTN ] \
	                                -cell_name rst_ctrl \
				        -ateclock ate_clk \
				        -cycles_per_asynch $occ_chain_len \
				        -chain_count 1   \
                                        -test_mode_port core_occ_test_mode_local

                                               
set_dft_clock_controller                -cell_name core_occ_ctrl_upper \
                                        -pllclocks [list vl_sms_WRCK \
                                                         clk] \
                                        -ateclock ate_clk \
                                        -cycles_per_clock $occ_chain_len \
                                        -chain_count $occ_chain_count \
                                        -test_mode_port core_occ_test_mode_upper

set_dft_clock_controller                -cell_name core_occ_ctrl_local \
                                        -pllclocks [list u_pll_gen/pll_clk_2] \
                                        -ateclock ate_clk \
                                        -cycles_per_clock $occ_chain_len \
                                        -chain_count $occ_chain_count \
                                        -test_mode_port core_occ_test_mode_local

set_dft_signal -view spec -type ScanDataIn  -port occ_si  -test_mode all_dft
set_dft_signal -view spec -type ScanDataOut -port occ_so  -test_mode all_dft

set_scan_path my_occ_chain -include_elements [list core_occ_ctrl_upper \
                                                   rst_ctrl \
                                                   core_occ_ctrl_local] \
			               -class occ \
			               -complete true \
                           -scan_data_in occ_si \
			               -scan_data_out occ_so \
			               -test_mode [list sccomp scan wrp_if ]

 for {set i 0} {$i <  $wrp_channel_count } {incr i} {
 	set_dft_signal -view existing -type ScanDataIn  -port wrp_si[${i}]  -test_mode [list wrp_of my_wrp_of]
 	set_dft_signal -view existing -type ScanDataOut -port wrp_so[${i}]  -test_mode [list wrp_of my_wrp_of]
 }
 
set_wrapper_configuration -reuse_threshold $wrapper_reuse_threshold
set_wrapper_configuration -chain_count $ext_sc            -test_mode [list my_wrp_of] 
set_wrapper_configuration -chain_count $wrp_channel_count -test_mode [list wrp_of] 
if { $share_wrapper_en == "yes"  } {
       set_wrapper_configuration -chain_count $wrp_channel_count -test_mode [list sccomp] 	
}  
 set_boundary_cell -class wrapper   -ports { REFCLK }\
                                    -type none 
 
 set_dft_port_isolation -safe_value_1_ports { vl_sms_dm0 \
                                              vl_sms_dm1 \
                                              vl_sms_dm2 } \
                        -iso_control test_mode 
 
 
 for {set i 0} {$i <  $normal_channel_count } {incr i} {
 	set_dft_signal -view  existing -type ScanDataIn  -port test_si[${i}]  -test_mode [list wrp_if scan sccomp]
 	set_dft_signal -view  existing -type ScanDataOut -port test_so[${i}]  -test_mode [list wrp_if scan sccomp]
 }
 
 set_scan_configuration -chain_count [expr $normal_channel_count + 1] -clock_mixing mix_clocks -test_mode [list wrp_if scan]  
 
 
if {$Comp == "streaming"} {
set_scan_compression_configuration -streaming $stream \
                                    -clock vl_sms_WRCK \
                                    -input $normal_channel_count \
                                    -output $normal_channel_count \
                                    -chain_count $core_chain_count \
                                    -shift_power_groups true \
                                    -shift_power_chain_length 10 \
                                    -shift_power_disable SPC_DISABLE \
                                    -shift_power_clock vl_sms_WRCK \
                                    -test_mode [list sccomp] 
} else {
set_scan_compression_configuration -streaming $stream \
                                    -input $normal_channel_count \
                                    -output $normal_channel_count \
                                    -chain_count $core_chain_count \
                                    -shift_power_groups true \
                                    -shift_power_chain_length 10 \
                                    -shift_power_disable SPC_DISABLE \
                                    -shift_power_clock vl_sms_WRCK \
                                    -test_mode [list sccomp] 
}

set_scan_compression_configuration  -input 2 \
				    -output 2 \
				    -chain_count $ext_sc \
				    -shift_power_groups true \
				    -shift_power_chain_length 10 \
				    -shift_power_disable SPC_DISABLE \
				    -shift_power_clock vl_sms_WRCK \
				    -test_mode [list my_wrp_of] 

set_wrapper_configuration -chain_count $ext_sc -test_mode [list sccomp]

set_logicbist_configuration -chain_count $core_chain_count \
                             -xtolerance extended \
                             -test_mode xlbist \
                             -misr_width $misr \
                             -pattern_counter_width $pcw \
                             -shift_counter_width $scw \
                             -occ_clock_weights [list [list 10 vl_sms_WRCK ]\
                                                      [list 10 clk]\
                                                      [list 10 u_pll_gen/pll_clk_2 ]]\
                             -reset_weights     [list [list 1 rst]\
                                                      [list 1 vl_sms_WRSTN] ] 
 create_test_protocol
 
 
 report_cell > ../reports/report_cell.rpt
 report_dft_configuration > ../reports/report_dft_configuration.rpt
 report_dft > ../reports/report_dft.rpt
 report_scan_configuration > ../reports/report_scan_configuration.rpt
 report_scan_compression_configuration > ../reports/report_scan_compression_configuration.rpt
 report_wrapper_configuration > ../reports/report_wrapper_configuration.rpt
 report_scan_group > ../reports/report_scan_group.rpt
 report_scan_path > ../reports/report_scan_path.rpt
 
 
 check_dft > ../logs/check_dft.log
 generate_dft > ../logs/generate_dft.log
 connect_dft > ../logs/connect_dft.log				;# Connecting DFT-IP to Functional RTL
 validate_dft  -check connectivity > ../logs/validate_dft.log	;# Validating connectivity and rules
 
 write_test_protocol -test_mode xlbist -out ../outputs/or1200.xlbist.spf
 write_test_protocol -test_mode sccomp -out ../outputs/or1200.sccomp.spf
 write_test_protocol -test_mode wrp_if -out ../outputs/or1200.wrp_if.spf
 write_test_protocol -test_mode scan -out   ../outputs/or1200.scan.spf
 write_test_protocol -test_mode wrp_of -out ../outputs/or1200.wrp_of.spf
 write_test_protocol -test_mode my_wrp_of -out ../outputs/or1200.my_wrp_of.spf
 write_test_model -out ../outputs/or1200.ctl
 write_test_model -test_mode wrp_of -out ../outputs/or1200.wrp_of.ctl
 set_svf formality -replace
 write_dft_constraints -out /data3/Class/AICCAD/2023_1/2023_1_aiccad03/project2/or1200_dc_top/02_testmax/outputs/or1200_dft_constraints
 
 exec mkdir  ../outputs/sdc
 write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_none_shift   -test_mode none  -mode shift   -occ active
 write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_none_capture -test_mode none  -mode capture -occ active
 write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_none_any     -test_mode none  -mode any	    -occ active
 
 current_test_mode xlbist
  write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_xlbist_shift   -test_mode defined  -mode shift   -occ active
  write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_xlbist_capture -test_mode defined  -mode capture -occ active
  write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_xlbist_any     -test_mode defined  -mode any     -occ active

 current_test_mode sccomp 
  write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_sccomp_shift   -test_mode defined  -mode shift   -occ active
  write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_sccomp_capture -test_mode defined  -mode capture -occ active
  write_test_timing -output ../outputs/sdc/or1200_sdc_constraints_sccomp_any     -test_mode defined  -mode any     -occ active

# Updating the protocols with the proper SPC_ENABLE setting
# foreach testmode "sccomp wrp_if scan wrp_of my_wrp_of" {
 foreach testmode "sccomp scan" {
    foreach patternexec "${testmode} ${testmode}_occ_bypass" {
        foreach spc "spc_enable  spc_disable" {
           set protocolfile_in  ../outputs/or1200.${testmode}.spf
           set protocolfile_out ../outputs/or1200.${patternexec}.${spc}.spf

           # Create a ${protocolfile_out}.stilgen_cfg constraints file for each configuration
           set file [open ./${protocolfile_out}.stilgen_cfg a]
           puts $file "INPUT_SPF  ./${protocolfile_in} -patternexec ${patternexec} "
           puts $file "OUTPUT_SPF ./${protocolfile_out}"
           if {${spc}=="spc_enable"} {
              puts $file "ADD_CONSTRAINT    0 SPC_DISABLE -section all "
              } else {
              puts $file "ADD_CONSTRAINT    1 SPC_DISABLE -section all "
              }
         close $file
         # Modify the SPF protocol with appropriate constraints defined in the ${protocolfile_out}.stilgen_cfg file
         exec stilgen -config_file ./${protocolfile_out}.stilgen_cfg  -protocol > ./${protocolfile_out}.stilgen.log
     }
   }
 }
#Concatenated OCC + cascaded OCC not supported for shared core wrapping
#TestMAX Manager not honoring test_dedicated_clock_chain_clock option 
#if { $share_wrapper_en == "yes" } {
#   exec  sed -i "s/enable(occ_load/enable(occ_load |lbist_fast_clk_en[0]/g" ./or1200_core0_DFTTopIP_1.v
#}

exit 
